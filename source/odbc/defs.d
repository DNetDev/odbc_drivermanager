/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 DNetDev (Richard Andrew Cattermole)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
module odbc.defs;

/*
 * sqltypes.h
 */

alias SQLCHAR = ubyte;
alias SQLSCHAR = byte;
alias SQLDATE = ubyte;
alias SQLDECIMAL = ubyte;
alias SQLDOUBLE = double;
alias SQLFLOAT = double;
alias SQLINTEGER = int;
alias SQLUINTEGER = uint;

alias SQLLEN = ptrdiff_t;
alias SQLULEN  = size_t;
alias SQLSETPOSIROW  = size_t;

deprecated {
	alias SQLROWCOUNT = SQLULEN;
	alias SQLROWSETSIZE = SQLULEN;
	alias SQLTRANSID = SQLULEN;
	alias SQLROWOFFSET = SQLLEN;
}

alias SQLNUMERIC = ubyte;
alias SQLPOINTER = void*;
alias SQLREAL = float;
alias SQLSMALLINT = short;
alias SQLUSMALLINT = ushort;
alias SQLTIME = ubyte;
alias SQLTIMESTAMP = ubyte;
alias SQLVARCHAR = ubyte;
alias SQLRETURN = SQLSMALLINT;
alias SQLHANDLE = void*;
alias SQLHENV = SQLHANDLE;
alias SQLHDBC = SQLHANDLE;
alias SQLHSTMT = SQLHANDLE;
alias SQLHDESC = SQLHANDLE;

alias UCHAR = ubyte;
alias SCHAR = byte;
alias SDWORD = int;
alias SWORD = short;
alias UDWORD = uint;
alias UWORD = short;

alias SLONG = long;
alias SSHORT = short;
alias ULONG = ulong;
alias USHORT = ushort;
alias SDOUBLE = double;
alias LDOUBLE = double;
alias SFLOAT = float;
alias PTR = void*;
alias HENV = void*;
alias HDBC = void*;
alias HSTMT = void*;

alias RETCODE = short;

version(Windows) {
	import core.sys.windows.windows : HWND;
	alias SQLHWND = HWND;
} else version(Posix) {
}

struct DATE_STRUCT {
	SQLSMALLINT year;
	SQLUSMALLINT month;
	SQLUSMALLINT day;
}

alias SQL_DATE_STRUCT = DATE_STRUCT;

struct TIME_STRUCT {
	SQLUSMALLINT hour;
	SQLUSMALLINT minute;
	SQLUSMALLINT second;
}

alias SQL_TIME_STRUCT = TIME_STRUCT;

struct TIMESTAMP_STRUCT {
	SQLSMALLINT year;
	SQLUSMALLINT month;
	SQLUSMALLINT day;
	SQLUSMALLINT hour;
	SQLUSMALLINT minute;
	SQLUSMALLINT second;
	SQLUINTEGER fraction;
}

alias SQL_TIMESTAMP_STRUCT = TIMESTAMP_STRUCT;

enum SQLINTERVAL {
	SQL_IS_YEAR						= 1,
	SQL_IS_MONTH					= 2,
	SQL_IS_DAY						= 3,
	SQL_IS_HOUR						= 4,
	SQL_IS_MINUTE					= 5,
	SQL_IS_SECOND					= 6,
	SQL_IS_YEAR_TO_MONTH			= 7,
	SQL_IS_DAY_TO_HOUR				= 8,
	SQL_IS_DAY_TO_MINUTE			= 9,
	SQL_IS_DAY_TO_SECOND			= 10,
	SQL_IS_HOUR_TO_MINUTE			= 11,
	SQL_IS_HOUR_TO_SECOND			= 12,
	SQL_IS_MINUTE_TO_SECOND			= 13
}

struct SQL_YEAR_MONTH_STRUCT {
	SQLUINTEGER year;
	SQLUINTEGER month;
}

struct SQL_DAY_SECOND_STRUCT {
	SQLUSMALLINT day;
	SQLUSMALLINT hour;
	SQLUSMALLINT minute;
	SQLUSMALLINT second;
	SQLUINTEGER fraction;
}

struct SQL_INTERVAL_STRUCT {
	SQLINTERVAL interval_type;
	SQLSMALLINT interval_sign;

	union intval_t {
		SQL_YEAR_MONTH_STRUCT year_month;
		SQL_DAY_SECOND_STRUCT day_second;
	}

	intval_t intval;
}

alias ODBCINT64 = long;

alias SQLBIGINT = ODBCINT64;
alias SQLUBIGINT = ulong;

enum SQL_MAX_NUMERIC_LEN = 16;

struct SQL_NUMERIC_STRUCT {
	SQLCHAR precision;
	SQLSCHAR scale;
	SQLCHAR sign;
	SQLCHAR[SQL_MAX_NUMERIC_LEN] val;
}

private {
	alias DWORD = uint;
	alias WORD = ushort;
	alias BYTE = ubyte;
}

struct SQLGUID {
	DWORD Data1;
	WORD Data2;
	WORD Data3;
	BYTE[8] Data4;
}

alias BOOKMARK = SQLULEN;

alias SQLWCHAR = wchar;
alias SQLTCHAR = SQLWCHAR;

/*
 * sql.h
 */

enum {
	SQL_NULL_DATA = -1,
	SQL_DATA_AT_EXEC = -2,
	SQL_SUCCESS = 0,
	SQL_SUCCESS_WITH_INFO = 1,
	SQL_NO_DATA = 100,
	SQL_PARAM_DATA_AVAILABLE = 101,
	SQL_ERROR = -1,
	SQL_INVALID_HANDLE = -2,
	SQL_STILL_EXECUTING = 2,
	SQL_NEED_DATA = 99,
	SQL_NTS = -3,
	SQL_NTSL = -3L,
	SQL_MAX_MESSAGE_LENGTH = 512,
	SQL_DATE_LEN = 10,
	SQL_TIME_LEN = 8,
	SQL_TIMESTAMP_LEN = 19,
	SQL_HANDLE_ENV = 1,
	SQL_HANDLE_DBC = 2,
	SQL_HANDLE_STMT = 3,
	SQL_HANDLE_DESC = 4,
	SQL_ATTR_OUTPUT_NTS = 10001,
	SQL_ATTR_AUTO_IPD = 10001,
	SQL_ATTR_METADATA_ID = 10014,
	SQL_ATTR_APP_ROW_DESC = 10010,
	SQL_ATTR_APP_PARAM_DESC = 10011,
	SQL_ATTR_IMP_ROW_DESC = 10012,
	SQL_ATTR_IMP_PARAM_DESC = 10013,
	SQL_ATTR_CURSOR_SCROLLABLE = -1,
	SQL_ATTR_CURSOR_SENSITIVITY = -2,
	SQL_NONSCROLLABLE = 0,
	SQL_SCROLLABLE = 1,

	SQL_DESC_COUNT = 1001,
	SQL_DESC_TYPE = 1002,
	SQL_DESC_LENGTH = 1003,
	SQL_DESC_OCTET_LENGTH_PTR = 1004,
	SQL_DESC_PRECISION = 1005,
	SQL_DESC_SCALE = 1006,
	SQL_DESC_DATETIME_INTERVAL_CODE = 1007,
	SQL_DESC_NULLABLE = 1008,
	SQL_DESC_INDICATOR_PTR = 1009,
	SQL_DESC_DATA_PTR = 1010,
	SQL_DESC_NAME = 1011,
	SQL_DESC_UNNAMED = 1012,
	SQL_DESC_OCTET_LENGTH = 1013,
	SQL_DESC_ALLOC_TYPE = 1099,

	SQL_DIAG_RETURNCODE = 1,
	SQL_DIAG_NUMBER = 2,
	SQL_DIAG_ROW_COUNT = 3,
	SQL_DIAG_SQLSTATE = 4,
	SQL_DIAG_NATIVE = 5,
	SQL_DIAG_MESSAGE_TEXT = 6,
	SQL_DIAG_DYNAMIC_FUNCTION = 7,
	SQL_DIAG_CLASS_ORIGIN = 8,
	SQL_DIAG_SUBCLASS_ORIGIN = 9,
	SQL_DIAG_CONNECTION_NAME = 10,
	SQL_DIAG_SERVER_NAME = 11,
	SQL_DIAG_DYNAMIC_FUNCTION_CODE = 12,

	SQL_DIAG_ALTER_DOMAIN = 3,
	SQL_DIAG_ALTER_TABLE = 4,
	SQL_DIAG_CALL = 7,
	SQL_DIAG_CREATE_ASSERTION = 6,
	SQL_DIAG_CREATE_CHARACTER_SET = 8,
	SQL_DIAG_CREATE_COLLATION = 10,
	SQL_DIAG_CREATE_DOMAIN = 23,
	SQL_DIAG_CREATE_INDEX = -1,
	SQL_DIAG_CREATE_SCHEMA = 64,
	SQL_DIAG_CREATE_TABLE = 77,
	SQL_DIAG_CREATE_TRANSLATION = 79,
	SQL_DIAG_CREATE_VIEW = 84,
	SQL_DIAG_DELETE_WHERE = 19,
	SQL_DIAG_DROP_ASSERTION = 24,
	SQL_DIAG_DROP_CHARACTER_SET = 25,
	SQL_DIAG_DROP_COLLATION = 26,
	SQL_DIAG_DROP_DOMAIN = 27,
	SQL_DIAG_DROP_INDEX = -2,
	SQL_DIAG_DROP_SCHEMA = 31,
	SQL_DIAG_DROP_TABLE = 32,
	SQL_DIAG_DROP_TRANSLATION = 33,
	SQL_DIAG_DROP_VIEW = 36,
	SQL_DIAG_DYNAMIC_DELETE_CURSOR = 38,
	SQL_DIAG_DYNAMIC_UPDATE_CURSOR = 81,
	SQL_DIAG_GRANT = 48,
	SQL_DIAG_INSERT = 50,
	SQL_DIAG_REVOKE = 59,
	SQL_DIAG_SELECT_CURSOR = 85,
	SQL_DIAG_UNKNOWN_STATEMENT = 0,
	SQL_DIAG_UPDATE_WHERE = 82,

	SQL_UNKNOWN_TYPE = 0,
	SQL_CHAR = 1,
	SQL_NUMERIC = 2,
	SQL_DECIMAL = 3,
	SQL_INTEGER = 4,
	SQL_SMALLINT = 5,
	SQL_FLOAT = 6,
	SQL_REAL = 7,
	SQL_DOUBLE = 8,
	SQL_DATETIME = 9,
	SQL_VARCHAR = 12,

	SQL_TYPE_DATE = 91,
	SQL_TYPE_TIME = 92,
	SQL_TYPE_TIMESTAMP = 93,

	SQL_UNSPECIFIED = 0,
	SQL_INSENSITIVE = 1,
	SQL_SENSITIVE = 2,

	SQL_ALL_TYPES = 0,
	SQL_DEFAULT = 99,
	SQL_ARD_TYPE = -99,
	SQL_APD_TYPE = -100,

	SQL_CODE_DATE = 1,
	SQL_CODE_TIME = 2,
	SQL_CODE_TIMESTAMP = 3,

	SQL_FALSE = 0,
	SQL_TRUE = 1,

	SQL_NO_NULLS = 0,
	SQL_NULLABLE = 1,
	SQL_NULLABLE_UNKNOWN = 2,

	SQL_PRED_NONE = 0,
	SQL_PRED_CHAR = 1,
	SQL_PRED_BASIC = 2,

	SQL_NAMED = 0,
	SQL_UNNAMED = 1,

	SQL_DESC_ALLOC_AUTO = 1,
	SQL_DESC_ALLOC_USER = 2,

	SQL_CLOSE = 0,
	SQL_DROP = 1,
	SQL_UNBIND = 2,
	SQL_RESET_PARAMS = 3,

	SQL_FETCH_NEXT = 1,
	SQL_FETCH_FIRST = 2,

	SQL_FETCH_LAST = 3,
	SQL_FETCH_PRIOR = 4,
	SQL_FETCH_ABSOLUTE = 5,
	SQL_FETCH_RELATIVE = 6,

	SQL_COMMIT = 0,
	SQL_ROLLBACK = 1,

	SQL_NULL_HENV = 0,
	SQL_NULL_HDBC = 0,
	SQL_NULL_HSTMT = 0,
	SQL_NULL_HDESC = 0,
	SQL_NULL_HANDLE = 0L,

	SQL_SCOPE_CURROW = 0,
	SQL_SCOPE_TRANSACTION = 1,
	SQL_SCOPE_SESSION = 2,

	SQL_PC_UNKNOWN = 0,
	SQL_PC_NON_PSEUDO = 1,
	SQL_PC_PSEUDO = 2,

	SQL_ROW_IDENTIFIER = 1,

	SQL_INDEX_UNIQUE = 0,
	SQL_INDEX_ALL = 1,

	SQL_INDEX_CLUSTERED = 1,
	SQL_INDEX_HASHED = 2,
	SQL_INDEX_OTHER = 3,

	SQL_API_SQLALLOCCONNECT = 1,
	SQL_API_SQLALLOCENV = 2,
	SQL_API_SQLALLOCHANDLE = 1001,
	SQL_API_SQLALLOCSTMT = 3,
	SQL_API_SQLBINDCOL = 4,
	SQL_API_SQLBINDPARAM = 1002,
	SQL_API_SQLCANCEL = 5,
	SQL_API_SQLCLOSECURSOR = 1003,
	SQL_API_SQLCOLATTRIBUTE = 6,
	SQL_API_SQLCOLUMNS = 40,
	SQL_API_SQLCONNECT = 7,
	SQL_API_SQLCOPYDESC = 1004,
	SQL_API_SQLDATASOURCES = 57,
	SQL_API_SQLDESCRIBECOL = 8,
	SQL_API_SQLDISCONNECT = 9,
	SQL_API_SQLENDTRAN = 1005,
	SQL_API_SQLERROR = 10,
	SQL_API_SQLEXECDIRECT = 11,
	SQL_API_SQLEXECUTE = 12,
	SQL_API_SQLFETCH = 13,
	SQL_API_SQLFETCHSCROLL = 1021,
	SQL_API_SQLFREECONNECT = 14,
	SQL_API_SQLFREEENV = 15,
	SQL_API_SQLFREEHANDLE = 1006,
	SQL_API_SQLFREESTMT = 16,
	SQL_API_SQLGETCONNECTATTR = 1007,
	SQL_API_SQLGETCONNECTOPTION = 42,
	SQL_API_SQLGETCURSORNAME = 17,
	SQL_API_SQLGETDATA = 43,
	SQL_API_SQLGETDESCFIELD = 1008,
	SQL_API_SQLGETDESCREC = 1009,
	SQL_API_SQLGETDIAGFIELD = 1010,
	SQL_API_SQLGETDIAGREC = 1011,
	SQL_API_SQLGETENVATTR = 1012,
	SQL_API_SQLGETFUNCTIONS = 44,
	SQL_API_SQLGETINFO = 45,
	SQL_API_SQLGETSTMTATTR = 1014,
	SQL_API_SQLGETSTMTOPTION = 46,
	SQL_API_SQLGETTYPEINFO = 47,
	SQL_API_SQLNUMRESULTCOLS = 18,
	SQL_API_SQLPARAMDATA = 48,
	SQL_API_SQLPREPARE = 19,
	SQL_API_SQLPUTDATA = 49,
	SQL_API_SQLROWCOUNT = 20,
	SQL_API_SQLSETCONNECTATTR = 1016,
	SQL_API_SQLSETCONNECTOPTION = 50,
	SQL_API_SQLSETCURSORNAME = 21,
	SQL_API_SQLSETDESCFIELD = 1017,
	SQL_API_SQLSETDESCREC = 1018,
	SQL_API_SQLSETENVATTR = 1019,
	SQL_API_SQLSETPARAM = 22,
	SQL_API_SQLSETSTMTATTR = 1020,
	SQL_API_SQLSETSTMTOPTION = 51,
	SQL_API_SQLSPECIALCOLUMNS = 52,
	SQL_API_SQLSTATISTICS = 53,
	SQL_API_SQLTABLES = 54,
	SQL_API_SQLTRANSACT = 23,
	SQL_API_SQLCANCELHANDLE = 1550,
	SQL_API_SQLCOMPLETEASYNC = 1551,

	SQL_MAX_DRIVER_CONNECTIONS = 0,
	SQL_MAXIMUM_DRIVER_CONNECTIONS = SQL_MAX_DRIVER_CONNECTIONS,
	SQL_MAX_CONCURRENT_ACTIVITIES = 1,
	SQL_MAXIMUM_CONCURRENT_ACTIVITIES = SQL_MAX_CONCURRENT_ACTIVITIES,
	SQL_DATA_SOURCE_NAME = 2,
	SQL_FETCH_DIRECTION = 8,
	SQL_SERVER_NAME = 13,
	SQL_SEARCH_PATTERN_ESCAPE = 14,
	SQL_DBMS_NAME = 17,
	SQL_DBMS_VER = 18,
	SQL_ACCESSIBLE_TABLES = 19,
	SQL_ACCESSIBLE_PROCEDURES = 20,
	SQL_CURSOR_COMMIT_BEHAVIOR = 23,
	SQL_DATA_SOURCE_READ_ONLY = 25,
	SQL_DEFAULT_TXN_ISOLATION = 26,
	SQL_IDENTIFIER_CASE = 28,
	SQL_IDENTIFIER_QUOTE_CHAR = 29,
	SQL_MAX_COLUMN_NAME_LEN = 30,
	SQL_MAXIMUM_COLUMN_NAME_LENGTH = SQL_MAX_COLUMN_NAME_LEN,
	SQL_MAX_CURSOR_NAME_LEN = 31,
	SQL_MAXIMUM_CURSOR_NAME_LENGTH = SQL_MAX_CURSOR_NAME_LEN,
	SQL_MAX_SCHEMA_NAME_LEN = 32,
	SQL_MAXIMUM_SCHEMA_NAME_LENGTH = SQL_MAX_SCHEMA_NAME_LEN,
	SQL_MAX_CATALOG_NAME_LEN = 34,
	SQL_MAXIMUM_CATALOG_NAME_LENGTH = SQL_MAX_CATALOG_NAME_LEN,
	SQL_MAX_TABLE_NAME_LEN = 35,
	SQL_SCROLL_CONCURRENCY = 43,
	SQL_TXN_CAPABLE = 46,
	SQL_TRANSACTION_CAPABLE = SQL_TXN_CAPABLE,
	SQL_USER_NAME = 47,
	SQL_TXN_ISOLATION_OPTION = 72,
	SQL_TRANSACTION_ISOLATION_OPTION = SQL_TXN_ISOLATION_OPTION,
	SQL_INTEGRITY = 73,
	SQL_GETDATA_EXTENSIONS = 81,
	SQL_NULL_COLLATION = 85,
	SQL_ALTER_TABLE = 86,
	SQL_ORDER_BY_COLUMNS_IN_SELECT = 90,
	SQL_SPECIAL_CHARACTERS = 94,
	SQL_MAX_COLUMNS_IN_GROUP_BY = 97,
	SQL_MAXIMUM_COLUMNS_IN_GROUP_BY = SQL_MAX_COLUMNS_IN_GROUP_BY,
	SQL_MAX_COLUMNS_IN_INDEX = 98,
	SQL_MAXIMUM_COLUMNS_IN_INDEX = SQL_MAX_COLUMNS_IN_INDEX,
	SQL_MAX_COLUMNS_IN_ORDER_BY = 99,
	SQL_MAX_COLUMNS_IN_SELECT = 100,
	SQL_MAXIMUM_COLUMNS_IN_SELECT = SQL_MAX_COLUMNS_IN_SELECT,
	SQL_MAX_COLUMNS_IN_TABLE = 101,
	SQL_MAX_INDEX_SIZE = 102,
	SQL_MAXIMUM_INDEX_SIZE = SQL_MAX_INDEX_SIZE,
	SQL_MAX_ROW_SIZE = 104,
	SQL_MAXIMUM_ROW_SIZE = SQL_MAX_ROW_SIZE,
	SQL_MAX_STATEMENT_LEN = 105,
	SQL_MAXIMUM_STATEMENT_LENGTH = SQL_MAX_STATEMENT_LEN,
	SQL_MAX_TABLES_IN_SELECT = 106,
	SQL_MAXIMUM_TABLES_IN_SELECT = SQL_MAX_TABLES_IN_SELECT,
	SQL_MAX_USER_NAME_LEN = 107,
	SQL_MAXIMUM_USER_NAME_LENGTH = SQL_MAX_USER_NAME_LEN,
	SQL_OJ_CAPABILITIES = 115,
	SQL_OUTER_JOIN_CAPABILITIES = SQL_OJ_CAPABILITIES,
	SQL_XOPEN_CLI_YEAR = 10000,
	SQL_CURSOR_SENSITIVITY = 10001,
	SQL_DESCRIBE_PARAMETER = 10002,
	SQL_CATALOG_NAME = 10003,
	SQL_COLLATION_SEQ = 10004,
	SQL_MAX_IDENTIFIER_LEN = 10005,
	SQL_MAXIMUM_IDENTIFIER_LENGTH = SQL_MAX_IDENTIFIER_LEN,
	SQL_AT_ADD_COLUMN = 0x00000001,
	SQL_AT_DROP_COLUMN = 0x00000002,
	SQL_AT_ADD_CONSTRAINT = 0x00000008,

	SQL_AM_NONE = 0,
	SQL_AM_CONNECTION = 1,
	SQL_AM_STATEMENT = 2,

	SQL_CB_DELETE = 0,
	SQL_CB_CLOSE = 1,
	SQL_CB_PRESERVE = 2,

	SQL_FD_FETCH_NEXT = 0x00000001,
	SQL_FD_FETCH_FIRST = 0x00000002,
	SQL_FD_FETCH_LAST = 0x00000004,
	SQL_FD_FETCH_PRIOR = 0x00000008,
	SQL_FD_FETCH_ABSOLUTE = 0x00000010,
	SQL_FD_FETCH_RELATIVE = 0x00000020,

	SQL_GD_ANY_COLUMN = 0x00000001,
	SQL_GD_ANY_ORDER = 0x00000002,

	SQL_IC_UPPER = 1,
	SQL_IC_LOWER = 2,
	SQL_IC_SENSITIVE = 3,
	SQL_IC_MIXED = 4,

	SQL_OJ_LEFT = 0x00000001,
	SQL_OJ_RIGHT = 0x00000002,
	SQL_OJ_FULL = 0x00000004,
	SQL_OJ_NESTED = 0x00000008,
	SQL_OJ_NOT_ORDERED = 0x00000010,
	SQL_OJ_INNER = 0x00000020,
	SQL_OJ_ALL_COMPARISON_OPS = 0x00000040,

	SQL_SCCO_READ_ONLY = 0x00000001,
	SQL_SCCO_LOCK = 0x00000002,
	SQL_SCCO_OPT_ROWVER = 0x00000004,
	SQL_SCCO_OPT_VALUES = 0x00000008,

	SQL_TC_NONE = 0,
	SQL_TC_DML = 1,
	SQL_TC_ALL = 2,
	SQL_TC_DDL_COMMIT = 3,
	SQL_TC_DDL_IGNORE = 4,

	SQL_TXN_READ_UNCOMMITTED = 0x00000001,
	SQL_TRANSACTION_READ_UNCOMMITTED = SQL_TXN_READ_UNCOMMITTED,
	SQL_TXN_READ_COMMITTED = 0x00000002,
	SQL_TRANSACTION_READ_COMMITTED = SQL_TXN_READ_COMMITTED,
	SQL_TXN_REPEATABLE_READ = 0x00000004,
	SQL_TRANSACTION_REPEATABLE_READ = SQL_TXN_REPEATABLE_READ,
	SQL_TXN_SERIALIZABLE = 0x00000008,
	SQL_TRANSACTION_SERIALIZABLE = SQL_TXN_SERIALIZABLE,

	SQL_NC_HIGH = 0,
	SQL_NC_LOW = 1
}

bool SQL_SUCCEEDED(SQLRETURN ret) pure { return (ret & (~1)) == 0; }

struct ODBCFunctions {
	/*
 	 * sql.h
 	 */

	SQLRETURN function(SQLHDBC ConnectionHandle, SQLHANDLE InputHandle, SQLHANDLE* OutputHandle) SQLAllocHandle;
	SQLRETURN function(SQLHDBC ConnectionHandle,
		SQLCHAR* ServerName, SQLSMALLINT NameLength1,
		SQLCHAR* UserName, SQLSMALLINT NameLength2,
		SQLCHAR* Authentication, SQLSMALLINT NameLength3) SQLConnect;
	SQLRETURN function(SQLHENV EnvironmentHandle, SQLUSMALLINT Direction,
		SQLCHAR* ServerName, SQLSMALLINT BufferLength1,
		SQLSMALLINT* NameLength1Ptr, SQLCHAR* Description,
		SQLSMALLINT BufferLength2, SQLSMALLINT* NameLength2Ptr) SQLDataSources;
	SQLRETURN function(SQLHDBC ConnectionHandle, 
		SQLUSMALLINT InfoType, SQLPOINTER InfoValue,
		SQLSMALLINT BufferLength, SQLSMALLINT* StringLengthPtr) SQLGetInfo;
	SQLRETURN function(SQLHDBC ConnectionHandle, SQLUSMALLINT FunctionId, SQLUSMALLINT* Supported) SQLGetFunctions;
	SQLRETURN function(SQLHSTMT StatementHandle, SQLSMALLINT DataType) SQLGetTypeInfo;
	SQLRETURN function(SQLHDBC ConnectionHandle, SQLINTEGER Attribute, SQLPOINTER Value, SQLINTEGER StringLength) SQLSetConnectAttr;
	SQLRETURN function(SQLHDBC ConnectionHandle, SQLINTEGER Attribute, SQLPOINTER Value,
		SQLINTEGER BufferLength, SQLINTEGER* StringLengthPtr) SQLGetConnectAttr;
	SQLRETURN function(SQLHENV EnvironmentHandle, SQLINTEGER Attribute,
		SQLPOINTER Value, SQLINTEGER StringLength) SQLSetEnvAttr;
	SQLRETURN function(SQLHENV EnvironmentHandle, SQLINTEGER Attribute, SQLPOINTER Value, SQLINTEGER BufferLength, SQLINTEGER* StringLength) SQLGetEnvAttr;
	SQLRETURN function(SQLHSTMT StatementHandle, SQLINTEGER Attribute, SQLPOINTER Value, SQLINTEGER StringLength) SQLSetStmtAttr;
	SQLRETURN function(SQLHSTMT StatementHandle, SQLINTEGER Attribute, SQLPOINTER Value, SQLINTEGER BufferLength, SQLINTEGER* StringLength) SQLGetStmtAttr;
	SQLRETURN function(SQLHDESC DescriptorHandle, SQLSMALLINT RecNumber, SQLSMALLINT FieldIdentifier, SQLPOINTER Value, SQLINTEGER BufferLength, SQLINTEGER* StringLength) SQLGetDescField;
	SQLRETURN function(SQLHDESC DescriptorHandle, SQLSMALLINT RecNumber, SQLCHAR* Name, SQLSMALLINT BufferLength, SQLSMALLINT* StringLengthPtr, SQLSMALLINT* TypePtr, SQLSMALLINT* SubTypePtr, SQLLEN* LengthPtr, SQLSMALLINT* PrecisionPtr, SQLSMALLINT* ScalePtr, SQLSMALLINT* NullablePtr) SQLGetDescRec;
	SQLRETURN function(SQLHDESC DescriptorHandle, SQLSMALLINT RecNumber, SQLSMALLINT FieldIdentifier, SQLPOINTER Value, SQLINTEGER BufferLength) SQLSetDescField;
	SQLRETURN function(SQLHDESC DescriptorHandle, SQLSMALLINT RecNumber, SQLSMALLINT Type, SQLSMALLINT SubType, SQLLEN Length, SQLSMALLINT Precision, SQLSMALLINT Scale, SQLPOINTER Data, SQLLEN* StringLength, SQLLEN* Indicator) SQLSetDescRec;
	SQLRETURN function(SQLHDESC SourceDescHandle, SQLHDESC TargetDescHandle) SQLCopyDesc;
	SQLRETURN function(SQLHSTMT StatementHandle, SQLCHAR* StatementText, SQLINTEGER TextLength) SQLPrepare;
	SQLRETURN function(SQLHSTMT StatementHandle, SQLCHAR* CursorName, SQLSMALLINT BufferLength, SQLSMALLINT* NameLengthPtr) SQLGetCursorName;
	SQLRETURN function(SQLHSTMT StatementHandle, SQLCHAR* CursorName, SQLSMALLINT NameLength) SQLSetCursorName;
	SQLRETURN function(SQLHSTMT StatementHandle) SQLExecute;
	SQLRETURN function(SQLHSTMT StatementHandle, SQLCHAR* StatementText, SQLINTEGER TextLength) SQLExecDirect;

	SQLRETURN function(SQLHSTMT StatementHandle, SQLPOINTER* Value) SQLParamData;
	SQLRETURN function(SQLHSTMT StatementHandle, SQLPOINTER Data, SQLLEN StrLen_or_Ind) SQLPutData;
	SQLRETURN function(SQLHSTMT StatementHandle, SQLLEN* RowCount) SQLRowCount;
	SQLRETURN function(SQLHSTMT StatementHandle, SQLPOINTER* Value) SQLNumResultCols;
	SQLRETURN function(SQLHSTMT StatementHandle, SQLUSMALLINT ColumnNumber, SQLCHAR* ColumnName, SQLSMALLINT BufferLength, SQLSMALLINT* NameLength, SQLSMALLINT* DataType, SQLULEN* ColumnSize, SQLSMALLINT* DecimalDigits, SQLSMALLINT* Nullable) SQLDescribeCol;

	version(X86_64) {
		SQLRETURN function(SQLHSTMT StatementHandle, SQLUSMALLINT columnNumber, SQLUSMALLINT FieldIdentifier, SQLPOINTER CharacterAttribute, SQLSMALLINT BufferLength, SQLSMALLINT* StringLength, SQLLEN* NumericAttribute) SQLColAttribute;
	} else {
		SQLRETURN function(SQLHSTMT StatementHandle, SQLUSMALLINT columnNumber, SQLUSMALLINT FieldIdentifier, SQLPOINTER CharacterAttribute, SQLSMALLINT BufferLength, SQLSMALLINT* StringLength, SQLPOINTER NumericAttribute) SQLColAttribute;
	}

	SQLRETURN function(SQLHSTMT StatementHandle, SQLUSMALLINT ColumnNumber, SQLSMALLINT TargetType, SQLPOINTER TargetValue, SQLLEN BufferLength, SQLLEN* Strlen_or_Ind) SQLBindCol;
	SQLRETURN function(SQLHSTMT StatementHandle) SQLFetch;
	SQLRETURN function(SQLHSTMT StatementHandle, SQLSMALLINT FetchOrientation, SQLLEN FetchOffset) SQLFetchScroll;
	SQLRETURN function(SQLUSMALLINT ColumnNumber, SQLSMALLINT TargetType, SQLPOINTER TargetValue, SQLLEN BufferLength, SQLLEN* StrLen_or_IndPtr) SQLGetData;

	SQLRETURN function(SQLSMALLINT HandleType, SQLHANDLE Handle, SQLSMALLINT RecNumber, SQLSMALLINT DiagIdentifier, SQLPOINTER DiagInfo, SQLSMALLINT BufferLength, SQLSMALLINT* StringLength) SQLGetDiagField;
	SQLRETURN function(SQLSMALLINT HandleType, SQLHANDLE Handle, SQLSMALLINT RecNumber, SQLCHAR* Sqlstate, SQLINTEGER* NativeError, SQLCHAR* MessageText, SQLSMALLINT BufferLength, SQLSMALLINT* TextLength) SQLGetDiagRec;
	SQLRETURN function(SQLHSTMT StatementHandle,
		SQLCHAR* CatalogName, SQLSMALLINT NameLength1,
		SQLCHAR* SchemaName, SQLSMALLINT NameLength2,
		SQLCHAR* TableName, SQLSMALLINT NameLength3,
		SQLCHAR* ColumnName, SQLSMALLINT NameLength4) SQLColumns;

	SQLRETURN function(SQLHSTMT StatementHandle, SQLUSMALLINT IdentifierType,
		SQLCHAR* CatalogName, SQLSMALLINT NameLength1,
		SQLCHAR* SchemaName, SQLSMALLINT NameLength2,
		SQLCHAR* TableName, SQLSMALLINT NameLength3,
		SQLUSMALLINT Scope, SQLUSMALLINT Nullable) SQLSpecialColumns;
	SQLRETURN function(SQLHSTMT StatementHandle,
		SQLCHAR* CatalogName, SQLSMALLINT NameLength1,
		SQLCHAR* SchemaName, SQLSMALLINT NameLength2,
		SQLCHAR* TableName, SQLSMALLINT NameLength3,
		SQLUSMALLINT Unique, SQLUSMALLINT Reserved) SQLStatistics;
	SQLRETURN function(SQLHSTMT StatementHandle,
		SQLCHAR* CatalogName, SQLSMALLINT NameLength1,
		SQLCHAR* SchemaName, SQLSMALLINT NameLength2,
		SQLCHAR* TableName, SQLSMALLINT NameLength3,
		SQLCHAR* TableType, SQLSMALLINT NameLength4) SQLTables;
	SQLRETURN function(SQLHSTMT StatementHandle, SQLUSMALLINT Option) SQLFreeStmt;
	SQLRETURN function(SQLHSTMT StatementHandle) SQLCloseCursor;
	SQLRETURN function(SQLHSTMT StatementHandle) SQLCancel;
	SQLRETURN function(SQLSMALLINT HandleType, SQLHANDLE InputHandle) SQLCancelHandle;
	SQLRETURN function(SQLSMALLINT HandleType, SQLHANDLE handle, SQLSMALLINT CompletionType) SQLEndTran;
	SQLRETURN function(SQLHDBC ConnectionHandle) SQLDisconnect;
	SQLRETURN function(SQLSMALLINT HandleType, SQLHANDLE Handle) SQLFreeHandle;

	/*
	 * sqlext.h
	 */

	// SQLDriverConnect
	// SQLBrowseConnect
	// SQLDrivers
	// SQLBindParameter
	// SQLSetScrollOptions
	// SQLNativeSql
	// SQLDescribeParam
	// SQLNumParams
	// SQLSetPos
	// SQLBulkOperations
	// SQLMoreResults
	// SQLColumnPrivileges
	// SQLForeignKeys
	// SQLPrimaryKeys
	// SQLProcedureColumns
	// SQLProcedures
	// SQLTablePrivileges
}